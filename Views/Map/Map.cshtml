﻿﻿@model EventSite.Models.FollowMeModel

@{
    ViewBag.Title = "Map";
}
<link href="~/Content/jquery-multiselect-css.css" rel="stylesheet" />
<link href="~/Content/jquery-multiselect-filter-css.css" rel="stylesheet" />

<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>


<script src="~/Scripts/jquery.multiselect.js"></script>
<script src="~/Scripts/jquery.multiselect.filter.js"></script>
<!-- This css is to ensure that the google map contols (zoom bar etc) show and size correctly. -->
<style>
    .map-fixed {
        position: fixed;
        margin: 0;
        top: 50px;
        left: 250px;
        width: 82%;
        height: 92%;
    }

    /*@@media (min-width:768px) {

    }*/

    #map_canvas {
        height: 100%;
        width: 100%;
        /*top: 7%;
        left: 0;*/
        position: relative;
        z-index: 500;
        /*margin-top:-20px;*/
        overflow: hidden;
    }

        #map_canvas img {
            max-width: none;
        }

    .infoDiv {
        height: 70px;
        width: 150px;
        -webkit-user-select: none;
        background-color: white;
    }

    #border {
        border: 1px solid black;
        width: 100%;
        margin-bottom: 1px;
    }

    #progress-bar {
        width: 0;
        max-width: 82%;
        background-color: #f8f8f8;
        height: 3px;
        z-index: 501;
        position: fixed;
        /*top:50px;*/
        /*left:250px;*/
        /*left: 0;*/
        /*border: 1px #000 Solid;*/
        padding: 5px;
        overflow: visible;
        /*margin-top:-20px;*/
    }

    /*@@media(min-width:768px) {
        #progress-bar {
            max-width: 100%;
        }
    }*/

    

    .chosen-container {
        position: relative;
        top: 60%;
        left: 80%;
    }

    .ui-multiselect {
        /*position: absolute;
        top: 15%;
        left: 35%;*/
        display: inline-block;
        width: 364px !important;
        padding: 2px 0 2px 4px;
        text-align: left;
        z-index: 501;
        opacity: 0.4 !important;
        filter: alpha(opacity=40) !important; /* For IE8 and earlier */
    }

        .ui-multiselect:hover {
            opacity: 1 !important;
            filter: alpha(opacity=100);
        }

    input[type="button"], input[type="submit"], input[type="reset"], input[type="file"]::-webkit-file-upload-button, button {
        align-items: flex-start;
        box-sizing: border-box;
    }
    /*.ui-widget {
        font-size:8pt;
    }*/
    .ui-state-default, .ui-widget-content .ui-state-default, .ui-widget-header .ui-state-default {
        border: 1px solid #cccccc;
        background: #a39f9f url(images/ui-bg_glass_100_f6f6f6_1x400.png) 50% 50% repeat-x;
        font-weight: bold;
        color: inherit;
        /*opacity: 0.8;
        filter: alpha(opacity=80);*/ /* For IE8 and earlier */
    }

    .ui-widget {
        font-family: Trebuchet MS,Tahoma,Verdana,Arial,sans-serif;
        font-size: 8pt;
        opacity: 0.8;
        filter: alpha(opacity=80); /* For IE8 and earlier */
    }

    select, button {
        margin: 0em;
        font: -webkit-small-control;
        color: initial;
        letter-spacing: normal;
        word-spacing: normal;
        text-transform: none;
        text-indent: 0px;
        text-shadow: none;
        display: inline-block;
        text-align: start;
    }

    #refresh {
        width: 35px;
        /*position: absolute;
        top:15%;
        left:33%;*/
        height:23px;
        display: inline-block;
        z-index: 501;
        opacity: 0.4 !important;
        filter: alpha(opacity=40) !important; /* For IE8 and earlier */
    }

        #refresh:hover {
            opacity: 1 !important;
            filter: alpha(opacity=100) !important;
        }

    #centerTop {
        position: fixed;
        top: 80px;
        left:330px;
        vertical-align: middle;
        z-index: 501;
    }

    /*@@media(min-width:768px) {
        #centerTop {
            top: 80px;
            left: 330px;
        }
    }*/

    #MapCounter {
        /*opacity: 0.6 !important;*/
        display: inline-block;
        z-index: 501;
        font-weight:900;
        /*filter: alpha(opacity=60) !important;*/ /* For IE8 and earlier */
    }

    #intPointHideShow {
        display: inline-block;
        border-radius: 0px;
        font-size: 8pt;
        opacity: 0.6 !important;
        filter: alpha(opacity=60) !important; /* For IE8 and earlier */
    }

    #intPointHideShow:hover {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important; /* For IE8 and earlier */
    }
    /*#chosen-select {
        z-index:9002;
        position:absolute;
        top:40%;
        left:40%;
    }*/
    /*#chosen-select:focus,#chosen-select:hover {
            visibility: visible;
        }*/
</style>
<div id="centerTop">
    <input id="refresh" name="value" value="@Model.RefreshInterval">
    @*@Html.DropDownList("users", new MultiSelectList(Model.Users, "ROW_ID", "NAME_FRONTAL"), new { placeholder = "Select users", multiple = "multiple", id = "chosen-select" })*@
    <label id="MapCounter">0</label>
    <button id="intPointHideShow">Hide</button>
</div>

<div class="map-fixed">
    <div id="progress-bar"></div>
    <div id="map_canvas"></div>
</div>


<section class="scripts">

    <script type="text/javascript">

        var width = $(window).width();
        var height = $(window).height();
        if (width <= 768) {
            $(".map-fixed").css("top",100);
            $(".map-fixed").css("left",0);
            $(".map-fixed").css("width","100%");
            $(".map-fixed").css("height",height-100);
            $("#centerTop").css("top",120);
            $("#centerTop").css("left",80);
        }
        
        //$(".map-fixed").css("height",height-50);
        $( window ).resize(function() {
            var width = $(window).width();
            var height = $(window).height();
            if (width <= 768) {
                $(".map-fixed").css("width",width);
                $(".map-fixed").css("height",height-100);
                $(".map-fixed").css("left",0);
                $(".map-fixed").css("top",100);
                $("#progress-bar").css("max-width","100%");
                
                $("#centerTop").css("top",120);
                $("#centerTop").css("left",80);
                totalWidth = width;
            } else {
                $(".map-fixed").css("width",width-250);
                $(".map-fixed").css("height",height-50);
                $(".map-fixed").css("left",250);
                $(".map-fixed").css("top",50);
                $("#progress-bar").css("max-width","82%");
                $("#centerTop").css("top",80);
                $("#centerTop").css("left",330);
                totalWidth = width-250;
            }

        });
        //alert(dwidth);
        //var wwidth = $( window ).width();
        //alert(wwidth);

        var event_id = @Model.Event_id;
        var checkedValues = [];
        var refreshInterval = @Model.RefreshInterval*1000;
        var timeToIncrementBar = @Model.RefreshInterval*100;//in milliseconds (*1000) and division by 10 (number of progress bar increments to 100%)
        var userId = @Model.User_id;
        var map;
        //participant coordinates
        var markers = [];
        //multiselect search result
        var searchMatch;
        //marker respective image
        var respectiveIcon = new Object();
        //link to icons
        var iconHost = 'http://setupevent.worldit.pt/web/Content/images/';
        //icon file names
        var icons = new Array('circle2.png', 'circle3.png', 'circle1.png', 'circle8.png', 'circle7.png', 'circle6.png', 'circle4.png', 'circle0.png', 'circle5.png');
        //interest points markers array
        var interestPoints = [];
        //boolean to check if map is showing interest points
        var showingInterestPoints = true;

        $('#chosen-select').multiselect().multiselectfilter({ autoReset : true,label : 'Search:',placeholder: ''});
        $("#chosen-select").bind("multiselectclick", function(event, ui) {
            if (ui.checked == true) {
                checkedValues.push(ui.value);
            }
            else {
                var index = checkedValues.indexOf(ui.value);
                checkedValues.splice(index,1);
            }
        });
        $("#chosen-select").bind("multiselectcheckall",function(event,ui){
            checkedValues = $("#chosen-select").val();
        });
        $("#multiselect").bind("multiselectuncheckall", function(event, ui){
            checkedValues = $("#chosen-select").val();
        });
        $("#chosen-select").bind("multiselectclose",function(event,ui){
            for (var i = 0; i < markers.length; i++) {
                if (markers[i].get('user_id') == searchMatch) {
                    map.setCenter(markers[i].getPosition());
                }
            }
        });
        $("#chosen-select").bind("multiselectfilterfilter",function(event,matches){
            if( matches != null){
                searchMatch = $(matches).val();
            }
        });

        function addMarkers(data) {
            //clear old markers if there are any
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(null);

            }
            var date;
            var minutes;
            //clear marker array
            markers = [];
            // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
            $.each(data, function (i, item) {
                date = new Date(parseInt(item.LAST_UPDT.substr(6)));
                minutes = (date.getMinutes() > 9) ? date.getMinutes() : "0" + date.getMinutes();
                if (item.FRONTAL != null) {
                    var marker = new google.maps.Marker({
                        'position': new google.maps.LatLng(item.LATITUDE.replace(",","."), item.LONGITUDE.replace(",",".")),
                        'map': map,
                        'title': item.NAME + " " + item.FRONTAL + "\n" + date.getHours() + ":" + minutes,

                    });
                }
                else {
                    var marker = new google.maps.Marker({
                        'position': new google.maps.LatLng(item.LATITUDE.replace(",","."), item.LONGITUDE.replace(",",".")),
                        'map': map,
                        'title': item.NAME + "\n" + date.getHours() + ":" + minutes,
                    });
                }

                marker.set('user_id',item.USERS_ID);
                if (respectiveIcon[item.USERS_ID] != null)
                {
                    if (item.FLAG == 1)
                    {
                        marker.setIcon(iconHost + respectiveIcon[item.USERS_ID]);
                    }
                    else
                    {
                        marker.setIcon(iconHost + 'circle_ina.png');
                    }
                }
                else
                {
                    var iconPosition = Math.floor(Math.random()*8);
                    marker.setIcon(iconHost + icons[iconPosition]);
                    respectiveIcon[item.USERS_ID] = icons[iconPosition];
                }
                var infowindow;
                if (item.FRONTAL != null) {
                    infowindow = new google.maps.InfoWindow({
                        content: "<div class='infoDiv'><p>" + item.NAME + " " + date.getHours() + ":" + minutes + "</p><p>" + item.FRONTAL + "</p></div>"
                    });
                }
                else {
                    infowindow = new google.maps.InfoWindow({
                        content: "<div class='infoDiv'><p>" + item.NAME + " " + date.getHours() + ":" + minutes + "</p></div>"
                    });
                }


                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(map, marker);
                });

                markers.push(marker);
            })
        }

        function Initialize() {

            google.maps.visualRefresh = true;
            var wit = new google.maps.LatLng(38.743462, -9.146843);

            var mapOptions = {
                zoom: 14,
                center: wit,
                mapTypeId: google.maps.MapTypeId.HYBRID
            };

            map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

            //var myLatlng = new google.maps.LatLng(38.743462, -9.146843);

            //var marker = new google.maps.Marker({
            //    position: wit,
            //    map: map,
            //    title: 'WorldIT - Mobile Applications'
            //});

            //marker.setIcon('http://setupevent.worldit.pt/webdev/Content/images/favicon3.png');


            if (event_id == 1007) {
                setTimeout(getTrack40,500);
                setTimeout(getTrack70,2000);
            }
            else if (event_id == 1008){
                getAzgoGpx();
            }

            getInterestPoints();
            var userid = getParameterByName('userid');
            var stardate = getParameterByName('startdate');
            var enddate = getParameterByName('enddate');
            getCourse(userid,stardate,enddate);

        }

        var progressBar = $('#progress-bar');
        (function workerPost() {
            $.ajax({
                url: "@Url.Action("Coordinates", "Map", new { id = Model.User_id , event_id = Model.Event_id})",
                type: 'POST',
                data: { "users": JSON.stringify(checkedValues) },
                dataType: 'json',
                cache: false,
                success: function(data) {
                    addMarkers(data);
                    setTimeout(workerPost, refreshInterval);
                    $("#MapCounter").html(markers.length);
                    //setInterval(interval);

                },
                error: function(error) {
                    setTimeout(workerPost, refreshInterval);
                }
            });
        })();

        @*(function worker() {
                    $.ajax({
                        url: "@Url.Action("Coordinates", "Map", new { id = Model.User_id , event_id = Model.Event_id})",
                        type: 'GET',
                        dataType: 'json',
                        cache: false,
                        success: function(data) {
                            addMarkers(data);
                            setTimeout(worker, 15000);


                        },
                        complete: function() {
                            setInterval(interval);

                        }
                    });
                })();*@
        var widthToIncrease = 0;
        if (width > 768) {            
            widthToIncrease = (width-250) / 10;
        } else {
            widthToIncrease = width / 10;
        }      
        var totalWidth = (width > 768) ? width-250 : width;

        var interval;
        function startProgressBar() {
            interval = setInterval(function() {

                var pwidth = progressBar.width();
                pwidth += widthToIncrease;
                if (pwidth > totalWidth) {
                    pwidth = 0;

                }
                progressBar.css('width', pwidth);
            }, timeToIncrementBar)
        }

        function getAzgoGpx() {
            $.ajax({
                type: "GET",
                url: "http://setupevent.worldit.pt/mapgpx/Azgofestival.xml",
                cache: false,
                dataType: "xml",
                success: function (xml) {
                    var points = [];
                    var bounds = new google.maps.LatLngBounds();
                    $(xml).find("trkpt").each(function () {
                        var lat = $(this).attr("lat");
                        var lon = $(this).attr("lon");
                        var p = new google.maps.LatLng(lat, lon);
                        points.push(p);
                        bounds.extend(p);

                    });
                    var poly = new google.maps.Polygon({
                        path: points,
                        strokeColor: "#00FF00",
                        strokeOpacity: .7,
                        strokeWeight: 4
                    });
                    poly.setMap(map);
                    // fit bounds to track
                    map.fitBounds(bounds);
                },
                error:function(req,status,error) {
                    console.log(req + " " + status +  " " + error);
                }
            });
        }

        function getTrack40() {
            $.ajax({
                type: "GET",
                url: "http://setupevent.worldit.pt/mapgpx/track40.xml",
                cache: false,
                dataType: "xml",
                success: function (xml) {
                    var points = [];
                    var bounds = new google.maps.LatLngBounds();
                    $(xml).find("trkpt").each(function () {
                        var lat = $(this).attr("lat");
                        var lon = $(this).attr("lon");
                        var p = new google.maps.LatLng(lat, lon);
                        points.push(p);
                        bounds.extend(p);

                    });
                    var poly = new google.maps.Polyline({
                        path: points,
                        strokeColor: "#00FF00",
                        strokeOpacity: .7,
                        strokeWeight: 4
                    });
                    poly.setMap(map);
                    // fit bounds to track
                    map.fitBounds(bounds);
                },
                error:function(req,status,error) {
                    console.log(req + " " + status +  " " + error);
                }
            });
        }


        function getCourse(user_id,starDate,endDate) {
            if (user_id != "" && starDate != "" && endDate != "") {
                $.ajax({
                    url:"@Url.Action("GetUserCourse", "Map")" + "/" + user_id + "?eid=" + event_id + "&sd=" + starDate + "&ed=" + endDate,
                    //&jsoncallback=addCourse...http://setupevent.worldit.pt/webdev/map/getusercourse/1078?eid=1007&sd=2014-04-01&ed=2014-04-02
                    dataType: 'json',
                    success:function(json) {
                        addCourse(json);
                    },
                    error:function(req,status,error) {
                        console.log(req + " " + status +  " " + error);
                    }
                });
            }

        }



        function getInterestPoints() {
            $.ajax({
                url: "@Url.Action("getInterestPoints", "Map", new { event_id = Model.Event_id})",
                type: 'GET',
                dataType: 'json',
                cache: false,
                success: function(json) {
                    addInterestPoints(json);
                },
                error:function(req,status,error) {
                    console.log(req + " " + status +  " " + error);
                }
            });
        }

        function addInterestPoints(data) {
            $.each(data, function (i, item) {
                var p = new google.maps.LatLng(item.LATITUDE, item.LONGITUDE);
                var marker = new google.maps.Marker ({
                    position: p,
                    map: map,
                    title: item.DESCRIPTION
                })
                marker.setIcon("data:image/png;base64," + item.IMAGE_B64);

                interestPoints.push(marker);
            })
        }


        function hideShowInterestPoints() {
            if (interestPoints.length > 0) {

                if (showingInterestPoints == true) {
                    for (var i = 0;i < interestPoints.length;i++) {
                        interestPoints[i].setVisible(false);
                    }
                    showingInterestPoints = false;
                    $('#intPointHideShow').html("Show");
                } else {

                    for (var i=0;i < interestPoints.length;i++) {
                        interestPoints[i].setVisible(true);
                    }
                    showingInterestPoints = true;
                    $('#intPointHideShow').html("Hide");
                }
            }
        }

        $(function () {
            $('#intPointHideShow').click(function () {
                hideShowInterestPoints();
            });
        });

        function addCourse(data) {
            $.each(data, function (i, item) {
                var p = new google.maps.LatLng(item.LATITUDE, item.LONGITUDE);
                var marker = new google.maps.Marker ({
                    position: p,
                    map: map,
                    title: 'Route'
                })
                marker.setIcon('http://www.stillwaterchamber.org/vendor/images/icons/marker.png');
            })
        }

        function getTrack70() {
            $.ajax({
                type: "GET",
                url: "http://setupevent.worldit.pt/mapgpx/track.xml",
                cache: false,
                dataType: "xml",
                success: function (xml) {
                    var points = [];
                    var bounds = new google.maps.LatLngBounds();
                    $(xml).find("trkpt").each(function () {
                        var lat = $(this).attr("lat");
                        var lon = $(this).attr("lon");
                        var p = new google.maps.LatLng(lat, lon);
                        points.push(p);
                        bounds.extend(p);

                    });
                    var poly = new google.maps.Polyline({
                        path: points,
                        strokeColor: "#FF0000",
                        strokeOpacity: .7,
                        strokeWeight: 4
                    });
                    poly.setMap(map);
                    // fit bounds to track
                    map.fitBounds(bounds);
                },
                error:function(req,status,error) {
                    console.log(req + " " + status +  " " + error);
                }
            });
        }

        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);
            return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }


        $(document).ready(function () {
            startProgressBar();
            Initialize();
            $('#refresh').keyup(function () {
                var value = parseInt( $( this ).val(),10);
                if (value > 4) {
                    refreshInterval = value*1000;
                    timeToIncrementBar = value*100;
                    $(this).css("border-color","black");
                }  else {
                    $(this).css("border-color","red");
                }
                clearInterval(interval);
                startProgressBar();
            });
        });



    </script>
</section> 